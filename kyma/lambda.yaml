apiVersion: kubeless.io/v1beta1
kind: Function
metadata:
  name: read
  labels:
    app: hello-kyma
spec:
  handler: handler.main
  runtime: nodejs8
  type: HTTP
  deployment:
    spec:
      template:
        spec:
          containers:
          - name: hello-kyma
  deps: |
    {
      "dependencies": {
        "redis": "^3.0.2",
        "bluebird": "^3.7.2"
      }
    }
  function: |
    var redis = require("redis");
    var bluebird = require("bluebird");

    bluebird.promisifyAll(redis.RedisClient.prototype);
    bluebird.promisifyAll(redis.Multi.prototype);

    var client = redis.createClient(process.env.AZ_uri);

    module.exports = {
        main: async function (event, context) {
            let value = await client.getAsync("order")
            console.log("Got " + value)
            if(value) {
                await client.delAsync("order")
                return "Found: " + value
            } else {
                return "Nothing found"
            }
        }
    };
---
apiVersion: servicecatalog.k8s.io/v1beta1
kind: ServiceBinding
metadata:
  name: azure-rediscache-read
  labels: 
    app: hello-kyma
spec:
  instanceRef:
    name: azure-rediscache-personal-introduction

---
apiVersion: servicecatalog.kyma-project.io/v1alpha1
kind: ServiceBindingUsage
metadata:
  name: azure-rediscache-read
  labels:
    app: hello-kyma
spec:
  parameters:
    envPrefix:
      name: "AZ_"
  serviceBindingRef:
    name: azure-rediscache-read
  usedBy:
    kind: function
    name: read
---
apiVersion: gateway.kyma-project.io/v1alpha2
kind: Api
metadata:
  labels:
    function: read
    app: hello-kyma
  name: read
spec:
  hostname: read-default
  service:
    name: read
    port: 8080